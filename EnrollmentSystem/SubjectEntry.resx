<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel5.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="SubjectCodeColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="DescriptionColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="UnitsColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CoPreColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>